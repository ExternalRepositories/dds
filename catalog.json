{
  "packages": {
    "abseil": {
      "2018.6.0": {
        "depends": [],
        "description": "Abseil Common Libraries",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "absl",
              "include": [],
              "strip-components": 0,
              "to": "src/absl/"
            },
            "remove": {
              "only-matching": [
                "**/*_test.c*",
                "**/*_testing.c*",
                "**/*_benchmark.c*",
                "**/benchmarks.c*",
                "**/*_test_common.c*",
                "**/mocking_*.c*",
                "**/test_util.cc",
                "**/mutex_nonprod.cc",
                "**/named_generator.cc",
                "**/print_hash_of.cc",
                "**/*_gentables.cc"
              ],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/abseil/abseil-cpp.git?lm=abseil/abseil#20180600"
      },
      "2019.8.8": {
        "depends": [],
        "description": "Abseil Common Libraries",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "absl",
              "include": [],
              "strip-components": 0,
              "to": "src/absl/"
            },
            "remove": {
              "only-matching": [
                "**/*_test.c*",
                "**/*_testing.c*",
                "**/*_benchmark.c*",
                "**/benchmarks.c*",
                "**/*_test_common.c*",
                "**/mocking_*.c*",
                "**/test_util.cc",
                "**/mutex_nonprod.cc",
                "**/named_generator.cc",
                "**/print_hash_of.cc",
                "**/*_gentables.cc"
              ],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/abseil/abseil-cpp.git?lm=abseil/abseil#20190808"
      },
      "2020.2.25": {
        "depends": [],
        "description": "Abseil Common Libraries",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "absl",
              "include": [],
              "strip-components": 0,
              "to": "src/absl/"
            },
            "remove": {
              "only-matching": [
                "**/*_test.c*",
                "**/*_testing.c*",
                "**/*_benchmark.c*",
                "**/benchmarks.c*",
                "**/*_test_common.c*",
                "**/mocking_*.c*",
                "**/test_util.cc",
                "**/mutex_nonprod.cc",
                "**/named_generator.cc",
                "**/print_hash_of.cc",
                "**/*_gentables.cc"
              ],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/abseil/abseil-cpp.git?lm=abseil/abseil#20200225.2"
      }
    },
    "asio": {
      "1.12.0": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-12-0"
      },
      "1.12.1": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-12-1"
      },
      "1.12.2": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-12-2"
      },
      "1.13.0": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-13-0"
      },
      "1.14.0": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-14-0"
      },
      "1.14.1": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-14-1"
      },
      "1.16.0": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-16-0"
      },
      "1.16.1": {
        "depends": [],
        "description": "Asio asynchronous I/O C++ library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "asio/src",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [
                "doc/**",
                "examples/**",
                "tests/**",
                "tools/**"
              ],
              "path": "src/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define ASIO_STANDALONE 1",
                  "kind": "insert",
                  "line": 13
                },
                {
                  "content": "#define ASIO_SEPARATE_COMPILATION 1",
                  "kind": "insert",
                  "line": 14
                }
              ],
              "path": "include/asio/detail/config.hpp"
            },
            "move": {
              "exclude": [],
              "from": "asio/include/",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/chriskohlhoff/asio.git?lm=asio/asio#asio-1-16-1"
      }
    },
    "boost.leaf": {
      "0.1.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.1.0"
      },
      "0.2.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.2.0"
      },
      "0.2.1": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.2.1"
      },
      "0.2.2": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.2.2"
      },
      "0.2.3": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.2.3"
      },
      "0.2.4": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.2.4"
      },
      "0.2.5": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.2.5"
      },
      "0.3.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/zajo/leaf.git?lm=boost/leaf#0.3.0"
      }
    },
    "boost.mp11": {
      "1.70.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/boostorg/mp11.git?lm=boost/mp11#boost-1.70.0"
      },
      "1.71.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/boostorg/mp11.git?lm=boost/mp11#boost-1.71.0"
      },
      "1.72.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/boostorg/mp11.git?lm=boost/mp11#boost-1.72.0"
      },
      "1.73.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/boostorg/mp11.git?lm=boost/mp11#boost-1.73.0"
      }
    },
    "boost.pfr": {
      "1.0.0": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/apolukhin/magic_get.git?lm=boost/pfr#1.0.0"
      },
      "1.0.1": {
        "depends": [],
        "description": "(No description was provided)",
        "transform": [],
        "url": "git+https://github.com/apolukhin/magic_get.git?lm=boost/pfr#1.0.1"
      }
    },
    "catch2": {
      "2.12.4": {
        "depends": [],
        "description": "A modern C++ unit testing library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 0,
              "to": "include/catch2"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 0,
              "to": "src"
            },
            "write": {
              "content": "\n                    #pragma once\n\n                    #define CATCH_CONFIG_MAIN\n                    #include \"./catch.hpp\"\n\n                    namespace Catch {\n\n                    CATCH_REGISTER_REPORTER(\"console\", ConsoleReporter)\n\n                    }\n                    ",
              "path": "include/catch2/catch_with_main.hpp"
            }
          }
        ],
        "url": "git+https://github.com/catchorg/Catch2.git?lm=catch2/catch2#v2.12.4"
      }
    },
    "cereal": {
      "0.9.0": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v0.9.0"
      },
      "0.9.1": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v0.9.1"
      },
      "1.0.0": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.0.0"
      },
      "1.1.0": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.1.0"
      },
      "1.1.1": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.1.1"
      },
      "1.1.2": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.1.2"
      },
      "1.2.0": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.2.0"
      },
      "1.2.1": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.2.1"
      },
      "1.2.2": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.2.2"
      },
      "1.3.0": {
        "depends": [],
        "description": "A C++11 library for serialization",
        "transform": [],
        "url": "git+https://github.com/USCiLab/cereal.git?lm=cereal/cereal#v1.3.0"
      }
    },
    "ctre": {
      "2.8.1": {
        "depends": [],
        "description": "A compile-time PCRE (almost) compatible regular expression matcher",
        "transform": [],
        "url": "git+https://github.com/hanickadot/compile-time-regular-expressions.git?lm=hanickadot/ctre#v2.8.1"
      },
      "2.8.2": {
        "depends": [],
        "description": "A compile-time PCRE (almost) compatible regular expression matcher",
        "transform": [],
        "url": "git+https://github.com/hanickadot/compile-time-regular-expressions.git?lm=hanickadot/ctre#v2.8.2"
      },
      "2.8.3": {
        "depends": [],
        "description": "A compile-time PCRE (almost) compatible regular expression matcher",
        "transform": [],
        "url": "git+https://github.com/hanickadot/compile-time-regular-expressions.git?lm=hanickadot/ctre#v2.8.3"
      },
      "2.8.4": {
        "depends": [],
        "description": "A compile-time PCRE (almost) compatible regular expression matcher",
        "transform": [],
        "url": "git+https://github.com/hanickadot/compile-time-regular-expressions.git?lm=hanickadot/ctre#v2.8.4"
      }
    },
    "fmt": {
      "6.0.0": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#6.0.0"
      },
      "6.1.0": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#6.1.0"
      },
      "6.1.1": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#6.1.1"
      },
      "6.1.2": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#6.1.2"
      },
      "6.2.0": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#6.2.0"
      },
      "6.2.1": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#6.2.1"
      },
      "7.0.0": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#7.0.0"
      },
      "7.0.1": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#7.0.1"
      },
      "7.0.2": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#7.0.2"
      },
      "7.0.3": {
        "depends": [],
        "description": "A modern formatting library : https://fmt.dev/",
        "transform": [],
        "url": "git+https://github.com/fmtlib/fmt.git?lm=fmt/fmt#7.0.3"
      }
    },
    "hinnant-date": {
      "2.4.1": {
        "depends": [],
        "description": "A date and time library based on the C++11/14/17 <chrono> header",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/HowardHinnant/date.git?lm=hinnant/date#v2.4.1"
      },
      "3.0.0": {
        "depends": [],
        "description": "A date and time library based on the C++11/14/17 <chrono> header",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/HowardHinnant/date.git?lm=hinnant/date#v3.0.0"
      }
    },
    "inja": {
      "1.0.0": {
        "depends": [],
        "description": "A Template Engine for Modern C++",
        "transform": [],
        "url": "git+https://github.com/pantor/inja.git?lm=inja/inja#v1.0.0"
      },
      "2.0.0": {
        "depends": [],
        "description": "A Template Engine for Modern C++",
        "transform": [],
        "url": "git+https://github.com/pantor/inja.git?lm=inja/inja#v2.0.0"
      },
      "2.0.1": {
        "depends": [],
        "description": "A Template Engine for Modern C++",
        "transform": [],
        "url": "git+https://github.com/pantor/inja.git?lm=inja/inja#v2.0.1"
      },
      "2.1.0": {
        "depends": [
          "nlohmann-json+0.0.0"
        ],
        "description": "A Template Engine for Modern C++",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"inja\", \"namespace\": \"inja\", \"version\": \"2.1.0\", \"depends\": [\"nlohmann-json+0.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"inja\", \"uses\": [\"nlohmann/json\"]}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/pantor/inja.git#v2.1.0"
      },
      "2.2.0": {
        "depends": [
          "nlohmann-json+0.0.0"
        ],
        "description": "A Template Engine for Modern C++",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"inja\", \"namespace\": \"inja\", \"version\": \"2.2.0\", \"depends\": [\"nlohmann-json+0.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"inja\", \"uses\": [\"nlohmann/json\"]}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/pantor/inja.git#v2.2.0"
      }
    },
    "libsodium": {
      "1.0.10": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.10"
      },
      "1.0.11": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.11"
      },
      "1.0.12": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.12"
      },
      "1.0.13": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.13"
      },
      "1.0.14": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.14"
      },
      "1.0.15": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.15"
      },
      "1.0.16": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.16"
      },
      "1.0.17": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.17"
      },
      "1.0.18": {
        "depends": [],
        "description": "Sodium is a new, easy-to-use software library for encryption,\ndecryption, signatures, password hashing and more.",
        "transform": [
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SODIUM_STATIC 1",
                  "kind": "insert",
                  "line": 8
                }
              ],
              "path": "include/sodium/export.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium/include",
              "include": [],
              "strip-components": 0,
              "to": "include/"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#pragma once\n\n// clang-format off\n\n/**\n * Header checks\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_SYS_MMAN_H 1\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_SYS_RANDOM_H 1\n#endif\n\n#if __has_include(<intrin.h>)\n    #define HAVE_INTRIN_H 1\n#endif\n\n#if __has_include(<sys/auxv.h>)\n    #define HAVE_SYS_AUXV_H 1\n#endif\n\n/**\n * Architectural checks for intrinsics\n */\n#if __has_include(<mmintrin.h>) && __MMX__\n    #define HAVE_MMINTRIN_H 1\n#endif\n\n#if __has_include(<emmintrin.h>) && __SSE2__\n    #define HAVE_EMMINTRIN_H 1\n#endif\n\n#if __SSE3__\n    #if __has_include(<pmmintrin.h>)\n        #define HAVE_PMMINTRIN_H 1\n    #endif\n    #if __has_include(<tmmintrin.h>)\n        #define HAVE_TMMINTRIN_H 1\n    #endif\n#endif\n\n#if __has_include(<smmintrin.h>) && __SSE4_1__\n    #define HAVE_SMMINTRIN_H\n#endif\n\n#if __has_include(<immintrin.h>)\n    #if __AVX__\n        #define HAVE_AVXINTRIN_H\n    #endif\n    #if __AVX2__\n        #define HAVE_AVX2INTRIN_H\n    #endif\n    #if __AVX512F__\n        #if defined(__clang__) && __clang_major__ < 4\n            // AVX512 may be broken\n        #elif defined(__GNUC__) && __GNUC__ < 6\n            // ''\n        #else\n            #define HAVE_AVX512FINTRIN_H\n        #endif\n    #endif\n#endif\n\n#if __has_include(<wmmintrin.h>) && __AES__\n    #define HAVE_WMMINTRIN_H 1\n#endif\n\n#if __RDRND__\n    #define HAVE_RDRAND\n#endif\n\n/**\n * Detect mman APIs\n */\n#if __has_include(<sys/mman.h>)\n    #define HAVE_MMAP 1\n    #define HAVE_MPROTECT 1\n    #define HAVE_MLOCK 1\n\n    #if defined(_DEFAULT_SOURCE) || defined(_BSD_SOURCE)\n        #define HAVE_MADVISE 1\n    #endif\n#endif\n\n#if __has_include(<sys/random.h>)\n    #define HAVE_GETRANDOM 1\n#endif\n\n/**\n * POSIX-Only stuff\n */\n#if __has_include(<unistd.h>)\n    #if defined(_DEFAULT_SOURCE)\n        #define HAVE_GETENTROPY 1\n    #endif\n\n    /**\n     * Default POSIX APIs\n     */\n    #define HAVE_POSIX_MEMALIGN 1\n    #define HAVE_GETPID 1\n    #define HAVE_NANOSLEEP 1\n\n    /**\n     * Language/library features from C11\n     */\n    #if __STDC_VERSION__ >= 201112L\n        #define HAVE_MEMSET_S 1\n    #endif\n\n    #if __linux__\n        #define HAVE_EXPLICIT_BZERO 1\n    #endif\n#endif\n\n/**\n * Miscellaneous\n */\n#if __has_include(<pthread.h>)\n    #define HAVE_PTHREAD 1\n#endif\n\n#if __has_include(<sys/param.h>)\n    #include <sys/param.h>\n    #if __BYTE_ORDER == __BIG_ENDIAN\n        #define NATIVE_BIG_ENDIAN 1\n    #elif __BYTE_ORDER == __LITTLE_ENDIAN\n        #define NATIVE_LITTLE_ENDIAN 1\n    #else\n        #error \"Unknown endianness for this platform.\"\n    #endif\n#elif defined(_MSVC)\n    // At time of writing, MSVC only targets little-endian.\n    #define NATIVE_LITTLE_ENDIAN 1\n#else\n    #error \"Unknown endianness for this platform.\"\n#endif\n\n#define CONFIGURED 1\n",
                  "kind": "insert",
                  "line": 1
                }
              ],
              "path": "include/sodium/private/common.h"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "builds/msvc/version.h",
              "include": [],
              "strip-components": 0,
              "to": "include/sodium/version.h"
            },
            "move": {
              "exclude": [],
              "from": "src/libsodium",
              "include": [],
              "strip-components": 0,
              "to": "src/"
            },
            "remove": {
              "only-matching": [],
              "path": "src/libsodium"
            }
          },
          {
            "copy": {
              "exclude": [],
              "from": "include",
              "include": [],
              "strip-components": 1,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/jedisct1/libsodium.git?lm=sodium/sodium#1.0.18"
      }
    },
    "lua": {
      "5.1.1": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.1.1"
      },
      "5.2.0": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.2.0"
      },
      "5.2.1": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.2.1"
      },
      "5.2.2": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.2.2"
      },
      "5.2.3": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.2.3"
      },
      "5.3.0": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.3.0"
      },
      "5.3.1": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.3.1"
      },
      "5.3.2": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.3.2"
      },
      "5.3.3": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.3.3"
      },
      "5.3.4": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.3.4"
      },
      "5.3.5": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.3.5"
      },
      "5.4.0": {
        "depends": [],
        "description": "Lua is a powerful and fast programming language that is easy to learn and use and to embed into your application.",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          }
        ],
        "url": "git+https://github.com/lua/lua.git?lm=lua/lua#v5.4.0"
      }
    },
    "magic_enum": {
      "0.5.0": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.5.0"
      },
      "0.6.0": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.0"
      },
      "0.6.1": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.1"
      },
      "0.6.2": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.2"
      },
      "0.6.3": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.3"
      },
      "0.6.4": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.4"
      },
      "0.6.5": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.5"
      },
      "0.6.6": {
        "depends": [],
        "description": "Static reflection for enums",
        "transform": [],
        "url": "git+https://github.com/Neargye/magic_enum.git?lm=neargye/magic_enum#v0.6.6"
      }
    },
    "ms-wil": {
      "2020.03.16": {
        "depends": [],
        "description": "The Windows Implementation Library",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/wil.git#dds/2020.03.16"
      }
    },
    "nameof": {
      "0.8.3": {
        "depends": [],
        "description": "Nameof operator for modern C++",
        "transform": [],
        "url": "git+https://github.com/Neargye/nameof.git?lm=neargye/nameof#v0.8.3"
      },
      "0.9.0": {
        "depends": [],
        "description": "Nameof operator for modern C++",
        "transform": [],
        "url": "git+https://github.com/Neargye/nameof.git?lm=neargye/nameof#v0.9.0"
      },
      "0.9.1": {
        "depends": [],
        "description": "Nameof operator for modern C++",
        "transform": [],
        "url": "git+https://github.com/Neargye/nameof.git?lm=neargye/nameof#v0.9.1"
      },
      "0.9.2": {
        "depends": [],
        "description": "Nameof operator for modern C++",
        "transform": [],
        "url": "git+https://github.com/Neargye/nameof.git?lm=neargye/nameof#v0.9.2"
      },
      "0.9.3": {
        "depends": [],
        "description": "Nameof operator for modern C++",
        "transform": [],
        "url": "git+https://github.com/Neargye/nameof.git?lm=neargye/nameof#v0.9.3"
      },
      "0.9.4": {
        "depends": [],
        "description": "Nameof operator for modern C++",
        "transform": [],
        "url": "git+https://github.com/Neargye/nameof.git?lm=neargye/nameof#v0.9.4"
      }
    },
    "neo-buffer": {
      "0.2.1": {
        "depends": [
          "neo-concepts^0.2.2",
          "neo-fun^0.1.1"
        ],
        "description": "Buffer and byte algorithms/types based on those of Asio",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-buffer.git#0.2.1"
      },
      "0.3.0": {
        "depends": [
          "neo-concepts^0.3.2",
          "neo-fun^0.4.0"
        ],
        "description": "Buffer and byte algorithms/types based on those of Asio",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-buffer.git#0.3.0"
      },
      "0.4.0": {
        "depends": [
          "neo-concepts^0.4.0",
          "neo-fun^0.4.1"
        ],
        "description": "Buffer and byte algorithms/types based on those of Asio",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-buffer.git#0.4.0"
      },
      "0.4.1": {
        "depends": [
          "neo-concepts^0.4.0",
          "neo-fun^0.4.1"
        ],
        "description": "Buffer and byte algorithms/types based on those of Asio",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-buffer.git#0.4.1"
      },
      "0.4.2": {
        "depends": [
          "neo-concepts^0.4.0",
          "neo-fun^0.4.1"
        ],
        "description": "Buffer and byte algorithms/types based on those of Asio",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-buffer.git#0.4.2"
      }
    },
    "neo-compress": {
      "0.1.0": {
        "depends": [
          "neo-buffer^0.4.1",
          "neo-fun^0.4.0",
          "zlib^1.2.9"
        ],
        "description": "Compression, archiving, etc. for C++20",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-compress.git#0.1.0"
      },
      "0.1.1": {
        "depends": [
          "neo-buffer^0.4.1",
          "neo-fun^0.5.0",
          "zlib^1.2.9"
        ],
        "description": "Compression, archiving, etc. for C++20",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-compress.git#0.1.1"
      }
    },
    "neo-concepts": {
      "0.2.2": {
        "depends": [],
        "description": "A (mostly) backport of C++20 concepts library, with some additions.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-concepts.git#0.2.2"
      },
      "0.3.0": {
        "depends": [],
        "description": "A (mostly) backport of C++20 concepts library, with some additions.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-concepts.git#0.3.0"
      },
      "0.3.1": {
        "depends": [],
        "description": "A (mostly) backport of C++20 concepts library, with some additions.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-concepts.git#0.3.1"
      },
      "0.3.2": {
        "depends": [],
        "description": "A (mostly) backport of C++20 concepts library, with some additions.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-concepts.git#0.3.2"
      },
      "0.4.0": {
        "depends": [],
        "description": "A (mostly) backport of C++20 concepts library, with some additions.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-concepts.git#0.4.0"
      }
    },
    "neo-fun": {
      "0.1.1": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.1.1"
      },
      "0.2.0": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.2.0"
      },
      "0.2.1": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.2.1"
      },
      "0.3.0": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.3.0"
      },
      "0.3.1": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.3.1"
      },
      "0.3.2": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.3.2"
      },
      "0.4.0": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.4.0"
      },
      "0.4.1": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.4.1"
      },
      "0.4.2": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.4.2"
      },
      "0.5.0": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.5.0"
      },
      "0.5.1": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.5.1"
      },
      "0.5.2": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.5.2"
      },
      "0.5.3": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.5.3"
      },
      "0.5.4": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.5.4"
      },
      "0.5.5": {
        "depends": [],
        "description": "Some library components that didn't quite fit anywhere else...",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-fun.git#0.5.5"
      }
    },
    "neo-http": {
      "0.1.0": {
        "depends": [
          "neo-buffer^0.4.2",
          "neo-fun^0.5.4"
        ],
        "description": "A modern HTTP library",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-http.git#0.1.0"
      }
    },
    "neo-io": {
      "0.1.0": {
        "depends": [
          "neo-fun~0.5.4",
          "neo-buffer~0.4.2"
        ],
        "description": "A modern IO library",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-io.git#0.1.0"
      }
    },
    "neo-sqlite3": {
      "0.2.3": {
        "depends": [],
        "description": "A modern and low-level C++ SQLite API",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-sqlite3.git#0.2.3"
      },
      "0.3.0": {
        "depends": [],
        "description": "A modern and low-level C++ SQLite API",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-sqlite3.git#0.3.0"
      },
      "0.4.0": {
        "depends": [
          "neo-fun^0.5.0"
        ],
        "description": "A modern and low-level C++ SQLite API",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-sqlite3.git#0.4.0"
      },
      "0.4.1": {
        "depends": [
          "neo-fun^0.5.0"
        ],
        "description": "A modern and low-level C++ SQLite API",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-sqlite3.git#0.4.1"
      }
    },
    "neo-url": {
      "0.1.0": {
        "depends": [
          "neo-fun^0.4.1"
        ],
        "description": "URL parsing and handling library.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-url.git#0.1.0"
      },
      "0.1.1": {
        "depends": [
          "neo-fun^0.4.3"
        ],
        "description": "URL parsing and handling library.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-url.git#0.1.1"
      },
      "0.1.2": {
        "depends": [
          "neo-fun^0.4.3"
        ],
        "description": "URL parsing and handling library.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-url.git#0.1.2"
      },
      "0.2.0": {
        "depends": [
          "neo-fun^0.5.5"
        ],
        "description": "URL parsing and handling library.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-url.git#0.2.0"
      },
      "0.2.1": {
        "depends": [
          "neo-fun^0.5.5"
        ],
        "description": "URL parsing and handling library.",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/neo-url.git#0.2.1"
      }
    },
    "nlohmann-json": {
      "3.7.1": {
        "depends": [],
        "description": "JSON for Modern C++",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/json.git#dds/3.7.1"
      }
    },
    "pcg-cpp": {
      "0.98.1": {
        "depends": [],
        "description": "PCG Randum Number Generation, C++ Edition",
        "transform": [],
        "url": "git+https://github.com/imneme/pcg-cpp.git?lm=pcg/pcg-cpp#v0.98.1"
      }
    },
    "pegtl": {
      "2.6.0": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.6.0"
      },
      "2.6.1": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.6.1"
      },
      "2.7.0": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.7.0"
      },
      "2.7.1": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.7.1"
      },
      "2.8.0": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.8.0"
      },
      "2.8.1": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.8.1"
      },
      "2.8.2": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.8.2"
      },
      "2.8.3": {
        "depends": [],
        "description": "Parsing Expression Grammar Template Library",
        "transform": [
          {
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/taocpp/PEGTL.git?lm=tao/pegtl#2.8.3"
      }
    },
    "pubgrub": {
      "0.2.1": {
        "depends": [],
        "description": "Pubgrub dependency resolution algorithm for C++",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/pubgrub.git#0.2.1"
      }
    },
    "pybind11": {
      "2.0.0": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.0.0"
      },
      "2.0.1": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.0.1"
      },
      "2.1.0": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.1.0"
      },
      "2.1.1": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.1.1"
      },
      "2.2.0": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.2.0"
      },
      "2.2.1": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.2.1"
      },
      "2.2.2": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.2.2"
      },
      "2.2.3": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.2.3"
      },
      "2.2.4": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.2.4"
      },
      "2.3.0": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.3.0"
      },
      "2.4.0": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.4.0"
      },
      "2.4.1": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.4.1"
      },
      "2.4.2": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.4.2"
      },
      "2.4.3": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.4.3"
      },
      "2.5.0": {
        "depends": [],
        "description": "Seamless operability between C++11 and Python",
        "transform": [],
        "url": "git+https://github.com/pybind/pybind11.git?lm=pybind/pybind11#v2.5.0"
      }
    },
    "range-v3": {
      "0.10.0": {
        "depends": [],
        "description": "Range library for C++14/17/20, basis for C++20's std::ranges",
        "transform": [],
        "url": "git+https://github.com/ericniebler/range-v3.git?lm=range-v3/range-v3#0.10.0"
      },
      "0.11.0": {
        "depends": [],
        "description": "Range library for C++14/17/20, basis for C++20's std::ranges",
        "transform": [],
        "url": "git+https://github.com/ericniebler/range-v3.git?lm=range-v3/range-v3#0.11.0"
      },
      "0.5.0": {
        "depends": [],
        "description": "Range library for C++14/17/20, basis for C++20's std::ranges",
        "transform": [],
        "url": "git+https://github.com/ericniebler/range-v3.git?lm=range-v3/range-v3#0.5.0"
      },
      "0.9.0": {
        "depends": [],
        "description": "Range library for C++14/17/20, basis for C++20's std::ranges",
        "transform": [],
        "url": "git+https://github.com/ericniebler/range-v3.git?lm=range-v3/range-v3#0.9.0"
      },
      "0.9.1": {
        "depends": [],
        "description": "Range library for C++14/17/20, basis for C++20's std::ranges",
        "transform": [],
        "url": "git+https://github.com/ericniebler/range-v3.git?lm=range-v3/range-v3#0.9.1"
      }
    },
    "semver": {
      "0.2.2": {
        "depends": [],
        "description": "A C++ Library for Dealing with Semantic Versioning",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/semver.git#0.2.2"
      }
    },
    "sol2": {
      "2.20.0": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.0\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.0"
      },
      "2.20.1": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.1\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.1"
      },
      "2.20.2": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.2\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.2"
      },
      "2.20.3": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.3\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.3"
      },
      "2.20.4": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.4\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.4"
      },
      "2.20.5": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.5\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.5"
      },
      "2.20.6": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": "sol",
              "include": [],
              "strip-components": 0,
              "to": "src/sol"
            },
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"2.20.6\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v2.20.6"
      },
      "3.0.2": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"3.0.2\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v3.0.2"
      },
      "3.0.3": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"3.0.3\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v3.0.3"
      },
      "3.2.0": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"3.2.0\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v3.2.0"
      },
      "3.2.1": {
        "depends": [
          "lua+0.0.0"
        ],
        "description": "A C++ <-> Lua API wrapper with advanced features and top notch performance",
        "transform": [
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"namespace\": \"sol2\",\n  \"version\": \"3.2.1\",\n  \"depends\": [\n    \"lua+0.0.0\"\n  ]\n}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\n  \"name\": \"sol2\",\n  \"uses\": [\n    \"lua/lua\"\n  ]\n}",
              "path": "library.json"
            }
          }
        ],
        "url": "git+https://github.com/ThePhD/sol2.git#v3.2.1"
      }
    },
    "spdlog": {
      "1.4.0": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.4.0\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.4.0"
      },
      "1.4.1": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.4.1\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.4.1"
      },
      "1.4.2": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.4.2\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.4.2"
      },
      "1.5.0": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.5.0\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.5.0"
      },
      "1.6.0": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.6.0\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.6.0"
      },
      "1.6.1": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.6.1\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.6.1"
      },
      "1.7.0": {
        "depends": [
          "fmt+6.0.0"
        ],
        "description": "Fast C++ logging library",
        "transform": [
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"namespace\": \"spdlog\", \"version\": \"1.7.0\", \"depends\": [\"fmt+6.0.0\"]}",
              "path": "package.json"
            }
          },
          {
            "write": {
              "content": "{\"name\": \"spdlog\", \"uses\": [\"fmt/fmt\"]}",
              "path": "library.json"
            }
          },
          {
            "edit": {
              "edits": [
                {
                  "content": "#define SPDLOG_FMT_EXTERNAL 1",
                  "kind": "insert",
                  "line": 13
                }
              ],
              "path": "include/spdlog/tweakme.h"
            },
            "remove": {
              "only-matching": [],
              "path": "src/"
            }
          }
        ],
        "url": "git+https://github.com/gabime/spdlog.git#v1.7.0"
      }
    },
    "tomlpp": {
      "1.0.0": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.0.0"
      },
      "1.1.0": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.1.0"
      },
      "1.2.0": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.2.0"
      },
      "1.2.3": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.2.3"
      },
      "1.2.4": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.2.4"
      },
      "1.2.5": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.2.5"
      },
      "1.3.0": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.3.0"
      },
      "1.3.3": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v1.3.3"
      },
      "2.0.0": {
        "depends": [],
        "description": "Header-only TOML config file parser and serializer for modern C++",
        "transform": [],
        "url": "git+https://github.com/marzer/tomlplusplus.git?lm=tomlpp/tomlpp#v2.0.0"
      }
    },
    "vob-json5": {
      "0.1.5": {
        "depends": [],
        "description": "A json5 library for C++",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/json5.git#0.1.5"
      }
    },
    "vob-semester": {
      "0.1.0": {
        "depends": [
          "neo-fun^0.1.0",
          "neo-concepts^0.2.1"
        ],
        "description": "A generic library for dealing with semistructured data",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/semester.git#0.1.0"
      },
      "0.1.1": {
        "depends": [
          "neo-fun^0.1.1",
          "neo-concepts^0.2.2"
        ],
        "description": "A generic library for dealing with semistructured data",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/semester.git#0.1.1"
      },
      "0.2.0": {
        "depends": [
          "neo-fun^0.3.2",
          "neo-concepts^0.3.2"
        ],
        "description": "A generic library for dealing with semistructured data",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/semester.git#0.2.0"
      },
      "0.2.1": {
        "depends": [
          "neo-fun^0.3.2",
          "neo-concepts^0.3.2"
        ],
        "description": "A generic library for dealing with semistructured data",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/semester.git#0.2.1"
      },
      "0.2.2": {
        "depends": [
          "neo-fun^0.3.2",
          "neo-concepts^0.3.2"
        ],
        "description": "A generic library for dealing with semistructured data",
        "transform": [],
        "url": "git+https://github.com/vector-of-bool/semester.git#0.2.2"
      }
    },
    "zlib": {
      "1.2.0": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.0.8"
      },
      "1.2.1": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.1.2"
      },
      "1.2.10": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.10"
      },
      "1.2.11": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.11"
      },
      "1.2.2": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.2.4"
      },
      "1.2.3": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.3.8"
      },
      "1.2.4": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.4.5"
      },
      "1.2.5": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.5.3"
      },
      "1.2.6": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.6.1"
      },
      "1.2.7": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.7.3"
      },
      "1.2.8": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.8"
      },
      "1.2.9": {
        "depends": [],
        "description": "A massively spiffy yet delicately unobtrusive compression library",
        "transform": [
          {
            "move": {
              "exclude": [],
              "from": ".",
              "include": [
                "*.c",
                "*.h"
              ],
              "strip-components": 0,
              "to": "src/"
            }
          },
          {
            "move": {
              "exclude": [],
              "from": "src/",
              "include": [
                "zlib.h",
                "zconf.h"
              ],
              "strip-components": 0,
              "to": "include/"
            }
          }
        ],
        "url": "git+https://github.com/madler/zlib.git?lm=zlib/zlib#v1.2.9"
      }
    }
  },
  "version": 2
}